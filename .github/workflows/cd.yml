name: Docker Compose CD

on:
  workflow_run:
    workflows: ["Docker Compose CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Login to DockerHub
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin <<< "${{ secrets.DOCKER_PASSWORD }}"

      - name: Pull Backend Docker image
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: docker pull ${{ secrets.DOCKER_USERNAME }}/task-management-app-backend:latest

      - name: Pull Frontend Docker image
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: docker pull ${{ secrets.DOCKER_USERNAME }}/task-management-app-frontend:latest

      - name: Stop and remove old Backend container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop task-management-app-backend-container || true
            docker rm task-management-app-backend-container || true

      - name: Stop and remove old Frontend container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop task-management-app-frontend-container || true
            docker rm task-management-app-frontend-container || true

      - name: Stop and remove old PostgreSQL container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop task-management-postgres || true
            docker rm task-management-postgres || true

      - name: Run PostgreSQL container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker run -d --name task-management-postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=task-management -p 5432:5432 postgres:latest

      - name: Run Backend container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker run -d --name task-management-app-backend-container --link task-management-postgres:postgres -e DATABASE_URL=postgresql://postgres:postgres@task-management-postgres:5432/task-management -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/task-management-app-backend:latest

      - name: Run Frontend container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker run -d --name task-management-app-frontend-container -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/task-management-app-frontend:latest

      - name: Setup Nginx configuration
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo 'server {
                listen 80;

                server_name localhost;

                location / {
                    proxy_pass http://nextjs:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }

                location /api {
                    proxy_pass http://symfony:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }

                location ~ \.php$ {
                    include fastcgi_params;
                    fastcgi_pass symfony:8000;
                    fastcgi_index index.php;
                    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                }

                location ~ /\.ht {
                    deny all;
                }
            }' > /etc/nginx/sites-available/default

      - name: Restart Nginx
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            systemctl restart nginx
            systemctl status nginx.service
            journalctl -xe
